package realEstate;

import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import utilities.DATABASE_CONSTANTS;
/**
 *
 * @author bchar
 */
public class Tennant extends javax.swing.JFrame {

    Connection conn=null;
    ResultSet rs =null;
    PreparedStatement pst=null;
    
    /**
     * Creates new form RTENANT
     */
    public Tennant() {
        initComponents();
        show_tenants();
        btnUpdate.setEnabled(false);
        btnDele.setEnabled(false);
        btnReset.setEnabled(true);
    }

    public void clrFields() {
        txtTenNum.setText(" ");
        txtFirst.setText(" ");
        txtMid.setText(" ");
        txtLast.setText(" ");
        txtDob.setText(" ");
        txtPhne.setText(" ");
        chkTrans.setSelected(false);
        chkEmp.setSelected(false);
        chkRIns.setSelected(false);
        txtMRent.setText(" ");
        txtLED.setText(" ");
    }
    
    public ArrayList<Tenant> tenantList(){
        ArrayList<Tenant> tenantList = new ArrayList<>();
        try {
             Class.forName(DATABASE_CONSTANTS.DRIVER);
             conn = DriverManager.getConnection(DATABASE_CONSTANTS.URL, DATABASE_CONSTANTS.USERNAME, DATABASE_CONSTANTS.PASSWORD);
             String sql = "Select * from Tennant";
             Statement st = conn.createStatement();
             ResultSet rs = st.executeQuery(sql);
             Tenant tenant;
             while(rs.next())
             {
                tenant=new Tenant(rs.getInt("ssn"), rs.getString("f_name") ,rs.getString("m_name") ,rs.getString("l_name") ,rs.getString("birthdate") ,rs.getString("phoneNumber") ,rs.getString("car") ,rs.getString("workStatus") ,rs.getString("rentersInsurance"), rs.getString("rent"), rs.getTimestamp("leaseEndDate"));
                tenantList.add(tenant);
             }  
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
         return tenantList;
        
    }
    
    public void show_tenants() {
        ArrayList<Tenant> list = tenantList();
        DefaultTableModel model = (DefaultTableModel)tblTen.getModel();
        Object[] row = new Object[11];
        
         for (int i = model.getRowCount(); i > 0; i--) { 
            model.removeRow(i - 1);
        }
         
        for (int i=0;i<list.size();i++){
            
            row[0]=list.get(i).getFname();
            row[1]=list.get(i).getMname();
            row[2]=list.get(i).getLname();
            row[3]=list.get(i).getBirthDate();
            row[4]=list.get(i).getPhoneNumber();
            row[5]=list.get(i).getRent();
            row[6]=list.get(i).getLeaseEndDate();
            row[7]=list.get(i).getCar();
            row[8]=list.get(i).getWorkStatus();
            row[9]=list.get(i).getRentersInsurance();
            row[10]=list.get(i).getSsn();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTenant = new javax.swing.JLabel();
        txtTenNum = new javax.swing.JTextField();
        lblFirst = new javax.swing.JLabel();
        txtFirst = new javax.swing.JTextField();
        lblMid = new javax.swing.JLabel();
        txtMid = new javax.swing.JTextField();
        lblLast = new javax.swing.JLabel();
        txtLast = new javax.swing.JTextField();
        txtDob = new javax.swing.JTextField();
        txtPhne = new javax.swing.JTextField();
        lblDob = new javax.swing.JLabel();
        lblPhne = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        chkTrans = new javax.swing.JCheckBox();
        chkEmp = new javax.swing.JCheckBox();
        chkRIns = new javax.swing.JCheckBox();
        lblRent = new javax.swing.JLabel();
        txtMRent = new javax.swing.JTextField();
        lblEndD = new javax.swing.JLabel();
        txtLED = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDele = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTen = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTenant.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTenant.setText("Tenant# :");

        txtTenNum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblFirst.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFirst.setText("First :");

        txtFirst.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblMid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMid.setText("    M :");

        txtMid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblLast.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblLast.setText("Last :");

        txtLast.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtDob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtPhne.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblDob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDob.setText("DOB :");

        lblPhne.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPhne.setText("Phone:");

        chkTrans.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkTrans.setText("Own Transportation");

        chkEmp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkEmp.setText("Employed");

        chkRIns.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkRIns.setText("Renters Insurance");

        lblRent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblRent.setText("Monthly Rent :");

        txtMRent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblEndD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEndD.setText("                 Date Lease Ends :");

        txtLED.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnInsert.setText("INSERT");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDele.setText("DELETE");
        btnDele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleActionPerformed(evt);
            }
        });

        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        tblTen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "M", "Last Name", "Date of Birth", "Contact#", "Rent per Month", "Lease End Date", "Transportation", "Employed", "Renters Ins.", "Tenant#"
            }
        ));
        tblTen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTenMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTen);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(chkTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(chkEmp)
                        .addGap(33, 33, 33)
                        .addComponent(chkRIns)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblMid, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMid, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTenant, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblFirst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTenNum, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblLast, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblDob, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblPhne, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPhne, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblRent, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMRent, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblEndD, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLED, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 75, Short.MAX_VALUE))
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(btnInsert)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDele)
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenant))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirst))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMid)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDob))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhne)
                            .addComponent(txtPhne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRent)
                    .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLast)
                    .addComponent(txtMRent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEndD))
                .addGap(41, 41, 41)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTrans)
                    .addComponent(chkRIns)
                    .addComponent(chkEmp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDele, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // Add new property records
        try{
            Class.forName(DATABASE_CONSTANTS.DRIVER);
            Connection conn = DriverManager.getConnection(DATABASE_CONSTANTS.URL, DATABASE_CONSTANTS.USERNAME, DATABASE_CONSTANTS.PASSWORD);
            String sql = "Insert into Tennant (ssn,f_name,m_name,l_name,birthdate,phoneNumber,car,workStatus,rentersInsurance,rent,leaseEndDate) values (?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement pst = conn.prepareStatement(sql);

            if(txtTenNum.getText().isEmpty()) {
             JOptionPane.showMessageDialog(null, "Please enter a tenant number!");
            }
            else {
                
            pst.setString (1, txtTenNum.getText());
            pst.setString (2, txtFirst.getText());
            pst.setString (3, txtMid.getText());
            pst.setString (4, txtLast.getText());
            
            pst.setString (5, txtDob.getText());
            pst.setString (6, txtPhne.getText());
            boolean chkTransValue = chkTrans.isSelected();
            pst.setBoolean (7, chkTransValue);
            boolean chkEmpValue = chkEmp.isSelected();
            pst.setBoolean (8, chkEmpValue);
            boolean chkRInsValue = chkRIns.isSelected();
            pst.setBoolean (9, chkRInsValue);
            pst.setString (10, txtMRent.getText());
            pst.setString (11, txtLED.getText());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Entry Saved");

            show_tenants();
            clrFields();
            }

        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            show_tenants();
        }

    }                                         

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // Update existing tenant records
        try{
            btnInsert.setEnabled(true);
            Class.forName(DATABASE_CONSTANTS.DRIVER);
            Connection conn = DriverManager.getConnection(DATABASE_CONSTANTS.URL, DATABASE_CONSTANTS.USERNAME, DATABASE_CONSTANTS.PASSWORD);
            int row = tblTen.getSelectedRow();
            String value = (tblTen.getModel().getValueAt(row, 10).toString());
            String sql = "UPDATE Tennant SET f_name=?,m_name=?,l_name=?,birthdate=?,phoneNumber=?,car=?,workStatus=?,rentersInsurance=?,rent=?,leaseEndDate=? where ssn="+value;
            PreparedStatement pst = conn.prepareStatement(sql);
           
            pst.setString (1, txtFirst.getText());
            pst.setString (2, txtMid.getText());
            pst.setString (3, txtLast.getText());
            pst.setString (4, txtDob.getText());
            pst.setString (5, txtPhne.getText());
            boolean chkTransValue = chkTrans.isSelected();
            pst.setBoolean (6, chkTransValue);
            boolean chkEmpValue = chkEmp.isSelected();
            pst.setBoolean (7, chkEmpValue);
            boolean chkRInsValue = chkRIns.isSelected();
            pst.setBoolean (8, chkRInsValue);
            pst.setString (9, txtMRent.getText());
            pst.setString (10, txtLED.getText());
                        
            pst.executeUpdate();

            DefaultTableModel model = (DefaultTableModel)tblTen.getModel();
            model.setRowCount(0);
            clrFields();

            JOptionPane.showMessageDialog(null, "Record successfully updated");

            show_tenants();
            btnUpdate.setEnabled(false);
            btnDele.setEnabled(false);
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            show_tenants();
        }

    }                                         

    private void btnDeleActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // Update existing tenant records
        try{
            btnInsert.setEnabled(true);
            Class.forName(DATABASE_CONSTANTS.DRIVER);
            Connection conn = DriverManager.getConnection(DATABASE_CONSTANTS.URL, DATABASE_CONSTANTS.USERNAME, DATABASE_CONSTANTS.PASSWORD);
            int row = tblTen.getSelectedRow();
            String value = (tblTen.getModel().getValueAt(row, 10).toString());
            String sql = "DELETE FROM Tennant where ssn=" + value;
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();

            DefaultTableModel model = (DefaultTableModel)tblTen.getModel();
            model.setRowCount(0);
            clrFields();

            JOptionPane.showMessageDialog(null, "Record has been deleted!");

            show_tenants();

            btnUpdate.setEnabled(false);
            btnDele.setEnabled(false);
        }

        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            show_tenants();
        }
    }                                       

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // Clear text fields
        clrFields();
        txtTenNum.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDele.setEnabled(false);
        btnInsert.setEnabled(true);
        btnReset.setEnabled(true);
    }                                        

    private void tblTenMouseClicked(java.awt.event.MouseEvent evt) {                                    
        // Populate text fields from table display
        int i = tblTen.getSelectedRow();
        TableModel model = tblTen.getModel();
        txtTenNum.setText(model.getValueAt(i, 10).toString());
        if(txtTenNum.getText().equals("0")) {
            //Do nothing    
            txtTenNum.setText(" ");
            clrFields();
        }
        else {
        txtTenNum.setEnabled(false);
        btnInsert.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDele.setEnabled(true);  
        btnReset.setEnabled(true); 
        
        txtFirst.setText(model.getValueAt(i, 0).toString());
        txtMid.setText(model.getValueAt(i, 1).toString());
        txtLast.setText(model.getValueAt(i, 2).toString());
        txtDob.setText(model.getValueAt(i, 3).toString());
        txtPhne.setText(model.getValueAt(i, 4).toString());
        txtMRent.setText(model.getValueAt(i, 5).toString());
        txtLED.setText(model.getValueAt(i, 6).toString());
        if(txtLED.getText().equals("NULL")) {
            //Do nothing    
            txtLED.setText(" ");
            txtLED.setEnabled(true);
        }
        //else {
            
        //}
        String chkTransVal = model.getValueAt(i, 7).toString();
            if(chkTransVal.equals("1")) {
                chkTrans.setSelected(true);
            }
            else {
                chkTrans.setSelected(false); 
            }
        String chkEmpVal = model.getValueAt(i, 8).toString();
            if(chkEmpVal.equals("1")) {
                chkEmp.setSelected(true);
            }
            else {
                chkEmp.setSelected(false); 
            }
        String chkRInsVal = model.getValueAt(i, 9).toString();
            if(chkRInsVal.equals("1")) {
                chkRIns.setSelected(true);
            }
            else {
                chkRIns.setSelected(false); 
            }    
        txtTenNum.setText(model.getValueAt(i, 10).toString());
        }
    }    
    
    public JPanel returnJPanel() {
        return jPanel1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tennant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tennant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tennant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tennant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tennant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnDele;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkEmp;
    private javax.swing.JCheckBox chkRIns;
    private javax.swing.JCheckBox chkTrans;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEndD;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblLast;
    private javax.swing.JLabel lblMid;
    private javax.swing.JLabel lblPhne;
    private javax.swing.JLabel lblRent;
    private javax.swing.JLabel lblTenant;
    private javax.swing.JTable tblTen;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtFirst;
    private javax.swing.JTextField txtLED;
    private javax.swing.JTextField txtLast;
    private javax.swing.JTextField txtMRent;
    private javax.swing.JTextField txtMid;
    private javax.swing.JTextField txtPhne;
    private javax.swing.JTextField txtTenNum;
    // End of variables declaration                   

    private static class Tenant {
    
        private int ssn;
        private String f_name, m_name, l_name, birthdate, phoneNumber, car, workStatus, rentersInsurance, rent;
        private Timestamp leaseEndDate;
      
        public Tenant(int ssn, String f_name, String m_name, String l_name, String birthdate, String phoneNumber, String car, String workStatus, String rentersInsurance, String rent, Timestamp leaseEndDate) {
            this.ssn=ssn;
            this.f_name=f_name;
            this.m_name=m_name;
            this.l_name=l_name;
            this.birthdate=birthdate;
            this.phoneNumber=phoneNumber;
            this.car=car;
            this.workStatus=workStatus;
            this.rentersInsurance=rentersInsurance;
            this.rent=rent;    
            this.leaseEndDate=leaseEndDate;
        }
        public int getSsn() {
            return ssn ;
        }
    
        public String getFname() {
            return f_name;
        }
    
        public String getMname() {
            return m_name;
        }
    
        public String getLname() {
            return l_name;
        }
    
        public String getBirthDate() {
            return birthdate;
        }
    
        public String getPhoneNumber() {
            return phoneNumber;
        }
    
        public String getCar() {
            return car;
        }
    
        public String getWorkStatus() {
            return workStatus;
        }
    
        public String getRentersInsurance() {
            return rentersInsurance;
        }  
    
        public String getRent() {
            return rent;
        }
    
        public Timestamp getLeaseEndDate() {
            return leaseEndDate;
        }
    }
}